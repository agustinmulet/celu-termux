#!/bin/bash

### BEGIN INIT INFO
# Provides:          sonarr
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: sonarr
# Description:       Sonarr
### END INIT INFO

    . /lib/lsb/init-functions

    #set -e

    NAME=sonarr
    DESC="Sonarr"
    MONO=$(which mono)

    DAEMON=/usr/lib/sonarr/bin/Sonarr.exe
    DAEMONOPTS=""

    PIDDIR=/var/run/${NAME}
    PIDFILE=${PIDDIR}/${NAME}.pid

    RUNASUSER=sonarr
    RUNASGROUP=media
    RUNAS=$RUNASUSER:$RUNASGROUP

    DATADIR=$datadir

    if ! [ -r ${DAEMON} ]; then echo "Can't read: ${DAEMON}" 2>&1; exit 1; fi
    if ! [ -x ${MONO} ]; then echo "Not executable: ${MONO}" 2>&1; exit 1; fi
    if ! [ -d ${DATADIR} ]; then echo "No such directory: ${DATADIR}" 2>&1; exit 1; fi

    if [ ! -d ${PIDDIR} ]; then
            mkdir -p ${PIDDIR}; chown ${RUNASUSER}:root ${PIDDIR}; chmod 0750 ${PIDDIR};
    fi

    do_start() {
            RETVAL=1
            if [ -e ${PIDFILE} ]; then
                    if ! kill -0 $(cat ${PIDFILE}) &> /dev/null; then
                            rm -f $PIDFILE
                    fi
            fi

            log_daemon_msg "Starting ${DESC}" "${NAME}"
            if pgrep -f "^${DAEMON}" > /dev/null 2>&1; then
                    log_progress_msg "(already running?)"
            else
                    start-stop-daemon -q -c $RUNAS --start --background --make-pidfile --pidfile $PIDFILE --exec $MONO -- $DAEMON $DAEMON_OPTS
                    RETVAL=$?
            fi
            log_end_msg $RETVAL
    }

    do_stop() {
        if [ -e ${PIDFILE} ]; then
            status_of_proc -p ${PIDFILE} ${DAEMON} ${NAME} && status="0" || status="$?"
            if [ "$status" = "0" ]; then
                log_daemon_msg "Stopping ${NAME}"
                start-stop-daemon -K --signal TERM --quiet --oknodo --pidfile ${PIDFILE}
                if [ "$?" == "0" ]; then
                    log_end_msg 0
                    rm -rf ${PIDFILE}
                else
                    log_end_msg 1
                fi
            fi
        else
            log_daemon_msg "${NAME} is not running"
            log_end_msg 0
        fi
    }

    case "$1" in
      start)
            do_start
       ;;
      stop)
            do_stop
       ;;

      status)
            status_of_proc -p $PIDFILE $DAEMON $NAME && exit 0 || exit $?
       ;;

      restart|force-reload)
            do_stop;
            do_start;
       ;;
      *)
            N=/etc/init.d/$NAME
            echo "Usage: $0 {start|stop|status|restart|force-reload}" >&2
            exit 1
       ;;
    esac

    exit 0